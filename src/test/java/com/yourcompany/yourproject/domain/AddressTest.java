/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/test/java/domain/ModelTest.e.vm.java
 */
package com.yourcompany.yourproject.domain;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

import com.yourcompany.yourproject.util.ValueGenerator;

/**
 * Basic tests for Address
 */
public class AddressTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Address model = new Address();
        assertFalse(model.isPrimaryKeySet());
    }

    @Test
    public void isPrimaryKeySetReturnsTrue() {
        Address model = new Address();
        model.setAddressId(ValueGenerator.getUniqueNumeric(Integer.class, "2147483647"));
        assertNotNull(model.getAddressId());
        assertTrue(model.isPrimaryKeySet());
    }

    // test columns methods

    @Test
    public void toStringNotNull() {
        Address model = new Address();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        Address model1 = new Address();
        Address model2 = new Address();

        Integer addressId = ValueGenerator.getUniqueNumeric(Integer.class, "2147483647");
        model1.setAddressId(addressId);
        model2.setAddressId(addressId);

        model1.setStreetName("d");
        model2.setStreetName("d");

        model1.setCity("d");
        model2.setCity("d");

        model1.setVersion(ValueGenerator.getNumeric(java.lang.Integer.class, "1"));
        model2.setVersion(ValueGenerator.getNumeric(java.lang.Integer.class, "1"));
        assertTrue(model1.isPrimaryKeySet());
        assertTrue(model2.isPrimaryKeySet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}